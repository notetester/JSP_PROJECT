package com.myweb.board.model;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Timestamp;
import java.util.ArrayList;

import javax.sql.DataSource;

import com.myweb.util.JdbcUtil;

import javax.naming.InitialContext;


public class BoardDAO {
	
	private static BoardDAO instance = new BoardDAO();
	
	//2. 직접 생성할 수 없도록 생성자에 private을 붙임
	private BoardDAO() {
		//객체가 생성될때 JDBC드라이버 로딩
		try {
			
			InitialContext ct = new InitialContext(); //초기설정값이 저장됨
			ds = (DataSource)ct.lookup("java:comp/env/jdbc/oracle"); //연결풀을 찾아서 DS에 저장
			
		} catch (Exception e) {
			System.out.println("클래스 로딩중 에러");
		}
		
	}
	//3. 외부에서 객체생성을 요구할 때 getter메서드를 통해 반환함
	public static BoardDAO getInstance() {
		return instance;
	}
	
	
	//DAO에 회원관리에 필요한 기능을 메서드로 생성, DB관련변수를 멤버변수로 선언
	//private String url = "jdbc:oracle:thin:@localhost:1521/XEPDB1";
	//private String uid = "JSP";
	//private String upw = "JSP";
	
	private DataSource ds;
	
	private Connection conn = null;
	private PreparedStatement pstmt = null;
	private ResultSet rs = null;
	
	//게시글 등록 메서드
	public void regist(String writer,String title,String content) {
		String sql="insert into board(bno,writer,title,content) values(board_seq.nextval,?,?,?)";
		try {
			conn=ds.getConnection();
			pstmt=conn.prepareStatement(sql);
			pstmt.setString(1,writer);
			pstmt.setString(2,title);
			pstmt.setString(3,content);
			pstmt.executeUpdate();
		}catch (Exception e) {
			e.printStackTrace();
		}finally {
			JdbcUtil.close(conn,pstmt,null);
		}
	}
	
	//글 목록 조회 메서드
	public ArrayList<BoardVO> getList() {
		ArrayList<BoardVO> list=new ArrayList<BoardVO>();
		//DB에서 모든 글 목록을 조회해서 VO에 담고, VO를 LIST에 추가
		String sql="select * from board order by bno desc";
		try {
			conn=ds.getConnection();
			pstmt=conn.prepareStatement(sql);
			rs=pstmt.executeQuery();
			while(rs.next()) {
				int bno=rs.getInt("BNO");
				String writer=rs.getString("WRITER");
				String title=rs.getString("TITLE");
				String content=rs.getString("CONTENT");
				Timestamp regdate=rs.getTimestamp("REGDATE");
				int hit=rs.getInt("HIT");
				BoardVO vo=new BoardVO(bno, writer, title, content, regdate, hit);
				list.add(vo);
			}
		}catch (Exception e) {
			e.printStackTrace();
		}finally {
			JdbcUtil.close(conn,pstmt,rs);
		}
		return list;
	}
	
	//게시글 상세보기 메서드
	public BoardVO getContent(String bno) {
		BoardVO vo=new BoardVO();
		String sql="select * from board where bno=?";
		try {
			conn=ds.getConnection();
			pstmt=conn.prepareStatement(sql);
			rs=pstmt.executeQuery();
			if(rs.next()) {
				int nbno=Integer.parseInt(bno);
				String writer=rs.getString("WRITER");
				String title=rs.getString("TITLE");
				String content=rs.getString("CONTENT");
				Timestamp regdate=rs.getTimestamp("REGDATE");
				int hit=rs.getInt("HIT");
				vo=new BoardVO(nbno, writer, title, content, regdate, hit);
			}
		}catch (Exception e) {
			e.printStackTrace();
		}finally {
			JdbcUtil.close(conn,pstmt,rs);
		}
		return vo;
	}
}
