package controller;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import user.service.GetInfoServiceImpl;
import user.service.JoinServiceImpl;
import user.service.LoginServiceImpl;
import user.service.UpdateUserServiceImpl;
import user.service.UserService;

@WebServlet("*.user")
public class UserController extends HttpServlet {
	private static final long serialVersionUID = 1L;
    public UserController() {
        super();
    }
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		//response.getWriter().append("Served at: ").append(request.getContextPath());
		doAction(request,response);
	}
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		//doGet(request, response);
		doAction(request,response);
	}
	protected void doAction(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		request.setCharacterEncoding("UTF-8");
		String uri=request.getRequestURI();
		String path=request.getContextPath();
		String command=uri.substring(path.length());
		System.out.println(command);
		UserService service=null;
		response.setContentType("text/html;charset=UTF-8");
		PrintWriter out=response.getWriter();
		if(command.equals("/join.user")) {
			request.getRequestDispatcher("user_join.jsp").forward(request,response);
		}else if(command.equals("/joinForm.user")) {
			service=new JoinServiceImpl();
			int result=service.execute(request,response);
			if(result==0) {
				out.println("<script>");
				out.println("alert('회원 등록에 실패하였습니다.')");
				out.println("location.href='join.user'");
				out.println("</script>");
			}else if(result==1){
				out.println("<script>");
				out.println("alert('성공적으로 가입하였습니다.')");
				out.println("location.href='login.user'");
				out.println("</script>");
			}else if(result==2) {
				out.println("<script>");
				out.println("alert('이미 존재하는 회원입니다.')");
				out.println("location.href='join.user'");
				out.println("</script>");
			}
		}else if(command.equals("/login.user")) {
			request.getRequestDispatcher("user_login.jsp").forward(request,response);
		}else if(command.equals("/loginForm.user")) {
			service=new LoginServiceImpl();
			int result=service.execute(request,response);
			if(result==1) {
				request.getSession().setAttribute("id",request.getParameter("id"));
				response.sendRedirect("mypage.user");
			}else {
				out.println("<script>");
				out.println("alert('아이디 비밀번호를 확인하세요.')");
				out.println("location.href='login.user'");
				out.println("</script>");
			}
		}else if(command.equals("/user/mypage.user")) {
			if(request.getSession().getAttribute("id")==null) {
				out.println("<script>");
				out.println("alert('로그인하십시오.')");
				out.println("location.href='login.user'");
				out.println("</script>");
			}else {
				request.getRequestDispatcher("user_mypage.jsp").forward(request,response);
			}
		}else if(command.equals("/user/update.user")) {
			service=new GetInfoServiceImpl();
			service.execute(request,response);
			request.getRequestDispatcher("user_mypageinfo.jsp").forward(request,response);
		}else if(command.equals("/user/updateForm.user")) {
			service=new UpdateUserServiceImpl();
			int result=service.execute(request,response);
			if(result==1) {//업데이트 성공
				request.getSession().setAttribute("id",request.getParameter("id"));
				response.sendRedirect("mypage.user");//마이 페이지로
			}else {
				response.setContentType("text/html;charset=UTF-8");
				PrintWriter out=response.getWriter();
				out.println("<script>");
				out.println("alert('회원 정보 수정에 실패했습니다.')");
				out.println("location.href='user_mypage.jsp'");
				out.println("</script>");
			}
		}else if(command.equals("/user/delete.user")) {//회원탈퇴화면 요청
			request.getRequestDispatcher("user_delete.jsp").forward(request,response);
		}else if(command.equals("/user/deleteForm.user")) {
			/*
			 * 1. DeleteServiceImpl 생성 DAO의 login 메서드를 실행해서 ID,PW검증
			 * 2. 검증된 유저라면 DAO의 delete메서드를 실행해서 탙퇴를 진행
			 * 3. delete메서드가 1을 반환하면 세션 삭제 후에 홈 화면으로 이동
			 *    delete메서드가 0을 반환하면 "회원 비밀번호를 확인하세요" 메시지를 화면에 출력하고,
			 *    탈퇴 화면으로 이동
			 */
			service=new DeleteBoardServiceImpl();
			int result=service.execute(request,response);
			if(result==1) {
				request.getSession().invalidate();
				response.sendRedirect("login.user");
			}else {
				response.setContentType("text/html;charset=UTF-8");
				PrintWriter out=response.getWriter();
				out.println("<script>");
				out.println("alert('비밀번호를 확인하세요.')");
				out.println("location.href='user_delete.jsp'");
				out.println("</script>");
			}
		}
	}
}
